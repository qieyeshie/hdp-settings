##修改网络信息
vi /etc/sysconfig/network-scripts/ifcfg-eth0
TYPE=Ethernet
PROXY_METHOD=none
BROWSER_ONLY=no
BOOTPROTO=static
IPADDR=192.168.43.71
NETMASK=255.255.255.0
GATEWAY=192.168.43.1
DNS1=114.114.114.114
DNS2=8.8.8.8
DEFROUTE=yes
IPV4_FAILURE_FATAL=no
NAME=eth0
DEVICE=eth0
ONBOOT=yes

##修改hostsname
hostnamectl --static set-hostname master
hostnamectl --static set-hostname slave1
hostnamectl --static set-hostname slave2


##修改hosts
vi /etc/hosts
192.168.43.71 master
192.168.43.72 slave1
192.168.43.73 slave2

##关闭防火墙服务
sudo systemctl status firewalld
#systemctl stop iptables.service #关闭防火墙
#systemctl disable iptables.service #禁止防火墙服务开机启动
systemctl stop firewalld.service #关闭防火墙
systemctl disable firewalld.service #禁止firewall开机启动
vim /etc/sysconfig/selinux
SELINUX=disabled

阿里云源
sudo cp /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.bak
sudo curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo
sudo yum clean all
sudo yum makecache

##配置hadoop用户的相互免密SSH远程登陆
vi /etc/ssh/sshd_config
##去掉下面三句的注释#
#RSAAuthentication yes(centos7.4后废除，用下一条Pub..)
PubkeyAuthentication yes
AuthorizedKeysFile      .ssh/authorized_keys
UseDNS no
##然后重启sshd服务
service sshd restart
##运行ssh生成.ssh文件夹
ssh localhost
##生成密钥和公钥
ssh-keygen -t rsa  #分别在各个服务器生成密钥和公钥
1、cat id_rsa.pub >> authorized_keys #在authorized_keys追加公钥
2、scp -r authorized_keys slave1:/home/hadoop/.ssh/  #远程传输文件
3、scp -r authorized_keys slave2:/home/hadoop/.ssh/  #远程传输文件
scp -r authorized_keys slave1:/home/hadoop/.ssh/  
scp -r authorized_keys master:/home/hadoop/.ssh/ #传回覆盖原有文件
chmod 600 authorized_keys #改文件的权限
service sshd restart #重启ssh服务

##挂载共享文件夹（可以使用ftp进行文件传输）
mkdir /mnt/sharefiles
mount -o username=username,password=password //192.168.43.70/sharefiles /mnt/sharefiles

##解压压缩包
tar -zvxf hadoop.tar.gz -C /usr/hadoop

#rpm 已经安装的全部软件
rpm -qa
#rpm 查询指定软件是否安装
rpm -qa | grep wget

查看有没有安装过：
yum list installed mysql*
rpm -qa | grep mysql*

##查看进程  (安装java)
jps


##查看文件目录的所有文件的权限
ll -all

##安装软件命令
yum install XXXXX软件

##chown用法
##用来更改某个目录或文件的用户名和用户组的
chown 用户名:组名 文件路径（可以是就对路径也可以是相对路径）
例1：chown root:root /tmp/tmp1
就是把tmp下的tmp1的用户名和用户组改成root和root（只修改了tmp1的属组）.
例2：chown -R root:root /tmp/tmp1
就是把tmp下的tmp1下的所有文件的属组都改成root和root。

##chmod用法
##用来修改某个目录或文件的访问权限。
语法：chmod [who] [+ | - | =] [mode] 文件名
 命令中各选项的含义为： 
操作对象who可是下述字母中的任一个或者它们的组合：
 　　u 表示“用户（user）”，即文件或目录的所有者。
 　　g 表示“同组（group）用户”，即与文件属主有相同组ID的所有用户。
 　　o 表示“其他（others）用户”。
 　　a 表示“所有（all）用户”。它是系统默认值。
 操作符号可以是：
 　　+ 添加某个权限。
 　　- 取消某个权限。
 　　= 赋予给定权限并取消其他所有权限（如果有的话）。
 设置 mode 所表示的权限可用下述字母的任意组合：
 　　r 可读。
 　　w 可写。
   　x 可执行。
 　　X 只有目标文件对某些用户是可执行的或该目标文件是目录时才追加x 属性。
 　　s 在文件执行时把进程的属主或组ID置为该文件的文件属主。
       方式“u＋s”设置文件的用户ID位，“g＋s”设置组ID位。
 　　t 保存程序的文本到交换设备上。
 　　u 与文件属主拥有一样的权限。
 　　g 与和文件属主同组的用户拥有一样的权限。
 　　o 与其他用户拥有一样的权限。
 文件名：以空格分开的要改变权限的文件列表，支持通配符。

